require(settings.get("ghu.base").."core/apis/ghu")local a=require("am.log")local b=require("am.colonies")local c=require("am.progress")local d=require("am.event")local e=require("am.core")_G.RUN_PROGRESS=true;_G.PROGRESS_SHOW_CLOSE=true;local f=true;local g=""local h=nil;local function i(j)g=j;if h~=nil then d.ColonyStatusPollEvent(h,g):send()end end;local function k()while _G.RUN_PROGRESS do a.info("Polling colony status...")i("Poll Colony")h=b.pollColony()d.ColonyStatusPollEvent(h,g):send()a.info("Completed polling colony status")i("")sleep(30)end;i("error:Stopped")sleep(5)f=false end;local function l()while _G.RUN_PROGRESS do sleep(7)i("Scan Warehouse")a.info("Emptying warehouse inventory...")b.emptyWarehouse()a.info("Completed empty warehouse")i("")sleep(53)end end;local function m()while f do local n=os.startTimer(3)local o,p=e.cleanEventArgs(os.pullEvent())if o==d.c.Event.Colonies.status_poll then c.print(d.getComputer(),p[1])end;c.handle(d.getComputer(),o,p)os.cancelTimer(n)end end;local function q(r,s)if r~=nil then if peripheral.wrap(r)==nil then error("Invalid transfer chest")end;b.s.transferChest.set(r)end;if s~=nil then if peripheral.wrap(s)==nil then error("Invalid import chest")end;b.s.importChest.set(s)end;if not b.canResume()then error("Missing transfer or import chest")end;a.s.print.set(false)parallel.waitForAll(k,l,m)a.s.print.set(true)term.clear()end;q(arg[1],arg[2])
