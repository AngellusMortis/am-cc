require(settings.get("ghu.base").."core/apis/ghu")local a=require("am.log")local b=require("am.colonies")local c=require("am.progress")local d=require("am.event")local e=require("am.core")_G.RUN_PROGRESS=true;_G.PROGRESS_SHOW_CLOSE=true;local f=true;local g=""local h=nil;local function i(j,k)if k~=nil and g~=k then return end;g=j;if h~=nil then d.ColonyStatusPollEvent(h,g):send()end end;local function l(m,n)if n==nil then n=false end;local o=10;while m>0 and _G.RUN_PROGRESS do m=m-0.5;o=o-0.5;if o<=0 then if n then d.PingEvent():send()end;o=10 end;sleep(0.5)end end;local function p()while _G.RUN_PROGRESS do a.info("Polling colony status...")i("Poll Colony","")h=b.pollColony()d.ColonyStatusPollEvent(h,g):send()a.info("Completed polling colony status")i("","Poll Colony")l(30,true)end;i("error:Stopped")sleep(2)f=false end;local function q()l(3)while _G.RUN_PROGRESS do i("Scan Warehouse")a.info("Emptying warehouse inventory...")b.emptyWarehouse()a.info("Completed empty warehouse")i("","Scan Warehouse")l(60)end end;local function r()while _G.RUN_PROGRESS do i("Fulfill Requests","")a.info("Fulfilling requests...")b.fulfillRequests()a.info("Completed fulfilling requests")i("","Fulfill Requests")l(10)end end;local function s()while f do local t=os.startTimer(3)local u,v=e.cleanEventArgs(os.pullEvent())if u==d.c.Event.Colonies.status_poll or u==d.c.Event.Colonies.warehouse_poll then c.print(d.getComputer(),v[1])end;c.handle(d.getComputer(),u,v)os.cancelTimer(t)end end;local function w(x)if x~=nil then if peripheral.wrap(x)==nil then error("Invalid import chest")end;b.s.importChest.set(x)end;if not b.canResume()then error("Missing transfer or import chest")end;a.s.print.set(false)parallel.waitForAll(p,q,s,r)a.s.print.set(true)term.clear()end;w(arg[1])
