require(settings.get("ghu.base").."core/apis/ghu")local a=require("am.log")local b=require("am.colonies")local c=require("am.progress")local d=require("am.event")local e=require("am.core")_G.RUN_PROGRESS=true;_G.PROGRESS_SHOW_CLOSE=true;local f=true;local g=""local h=nil;local function i(j)g=j;if h~=nil then d.ColonyStatusPollEvent(h,g):send()end end;local function k(l,m)if m==nil then m=false end;local n=10;while l>0 and _G.RUN_PROGRESS do l=l-0.5;n=n-0.5;if n<=0 then if m then d.PingEvent():send()end;n=10 end;sleep(0.5)end end;local function o()while _G.RUN_PROGRESS do a.info("Polling colony status...")i("Poll Colony")h=b.pollColony()d.ColonyStatusPollEvent(h,g):send()a.info("Completed polling colony status")i("")k(30,true)end;i("error:Stopped")sleep(2)f=false end;local function p()k(3)while _G.RUN_PROGRESS do i("Scan Warehouse")a.info("Emptying warehouse inventory...")b.emptyWarehouse()a.info("Completed empty warehouse")i("")k(60)end end;local function q()while _G.RUN_PROGRESS do i("Fulfill Requests")a.info("Fulfilling requests...")b.fulfillRequests()a.info("Completed fulfilling requests")i("")k(10)end end;local function r()while f do local s=os.startTimer(3)local t,u=e.cleanEventArgs(os.pullEvent())if t==d.c.Event.Colonies.status_poll or t==d.c.Event.Colonies.warehouse_poll then c.print(d.getComputer(),u[1])end;c.handle(d.getComputer(),t,u)os.cancelTimer(s)end end;local function v(w)if w~=nil then if peripheral.wrap(w)==nil then error("Invalid import chest")end;b.s.importChest.set(w)end;if not b.canResume()then error("Missing transfer or import chest")end;a.s.print.set(false)parallel.waitForAll(o,p,r,q)a.s.print.set(true)term.clear()end;v(arg[1])
