local a=require("cc.expect")require(settings.get("ghu.base").."core/apis/ghu")local b=require("am.core")local c=require("am.log")local d=require("am.peripheral")local e=require("am.event")local f={}local g={}g.mods={name="colonies.blacklistedMods",default={["minecraft"]=true,["domum_ornamentum"]=true,["minecolonies"]=true},type="table"}g.maxStacks={name="colonies.maxStacks",default=4,type="number"}g.importChest={name="colonies.importChest",default="",type="string"}g.transferChest={name="colonies.transferChest",default="",type="string"}f.s=b.makeSettingWrapper(g)local h=nil;local i=nil;local function j()if h==nil then h=peripheral.find("colonyIntegrator")if h==nil then error("Could not find Colony Integrator")end end;return h end;local function k()if i==nil then i=peripheral.find("meBridge")if i==nil then error("Could not find ME Bridge")end end;return i end;local function l()local m=f.s.transferChest.get()if m~=""then return peripheral.wrap(m)end;return nil end;local function n()local m=f.s.importChest.get()if m~=""then return peripheral.wrap(m)end;return nil end;local function o(p)a.expect(1,p,"table")local q=nil;local r=p.list()for s=1,p.size(),1 do if r[s]==nil then q=s;break end end;return q end;local function t()if colony==nil or not colony.isValid()then error("Could not find colony info")end;local u=j()local v=colony.getInfo()if not v.active then error("Colony is not active")end;v.graves=u.amountOfGraves()v.constructionCount=u.amountOfConstructionSites()v.players=colony.getPlayers().players;v.requests=colony.getRequests()local w=colony.getBuildings()v.buildings={}v.tavernCount=0;for x,y in ipairs(w)do if y.type=="tavern"and y.level>0 then v.tavernCount=v.tavernCount+1 end;if y.type~="postbox"and y.type~="stash"then v.buildings[#v.buildings+1]=y end end;local z=colony.getVisitors()v.visitorCount=#z;v.visitors={}for x,A in ipairs(z)do v.visitors[A.id]=A end;local B=colony.getCitizens()v.citizenCount=#B;v.citizens={}for x,C in ipairs(B)do v.citizens[C.id]=C end;return v end;local function D()c.info("Scanning Warehouse...")local E=d.getInventoryNames()local r={}local F=0;local G=0;for x,H in ipairs(E)do if H:sub(1,18)=="minecolonies:rack_"then c.debug(string.format(".Scanning %s...",H))local I=peripheral.wrap(H)G=G+I.size()for J,K in pairs(I.list())do F=F+1;local L=K.name;if K.nbt~=nil then L=L..":"..K.nbt end;if r[L]==nil then K=I.getItemDetail(J)if K~=nil then K.inventories={[H]={J}}r[L]=K end else local M=r[L]M.count=M.count+K.count;local N=M.inventories[H]if N==nil then N={J}else N[#N+1]=J end;M.inventories[H]=N;r[L]=M end end end end;return r,F,G end;local function O(K,P)a.expect(1,K,"table")a.expect(2,P,"number","nil")if P==nil then P=K.count end;c.info(string.format(".Empty %s %s",K.name,P))local p=n()if p==nil then error("Could not find dump chest")return end;local Q=0;for H,R in pairs(K.inventories)do local S=peripheral.wrap(H)for x,J in ipairs(R)do local T=nil;while T==nil do T=o(p)if T==nil then c.info("Waiting for dump chest to empty...")sleep(5)end end;local U=S.getItemDetail(J)if U~=nil and U.name==K.name then local V=U.count;if V>P then V=P end;Q=Q+V;c.debug(string.format("%s %s %s %s %s",peripheral.getName(p),H,J,V,T))p.pullItems(H,J,V,T)if Q>=P then break end end end end end;local function W(r)c.debug("Emptying Items...")local X=false;for x,K in pairs(r)do local Y=b.split(K.name,":")if not f.s.mods.get()[Y[1]]then O(K)else local Z=K.count/K.maxCount;local _=Z-f.s.maxStacks.get()if _>0 then X=true;O(K,_*K.maxCount)end end end;return X end;local function a0()if colony==nil or not colony.isValid()then error("Could not find colony info")end;local X=true;local r,F,G;while X do r,F,G=D()X=W(r)if X then c.info(".Rescanning warehouse")end end;local a1={}for x,K in pairs(r)do a1[#a1+1]=K end;e.ColonyWarehousePollEvent(colony.getInfo().id,a1,F,G):send()end;local function a2()return n()~=nil and l()~=nil end;f.pollColony=t;f.scanItems=D;f.emptyWarehouse=a0;f.canResume=a2;return f
