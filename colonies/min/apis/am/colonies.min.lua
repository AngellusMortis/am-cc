local a=require("cc.expect")require(settings.get("ghu.base").."core/apis/ghu")local b=require("am.core")local c=require("am.event")local d=require("am.log")local e={}local f={}f.mods={name="colonies.blacklistedMods",default={["minecraft"]=true,["domum_ornamentum"]=true,["minecolonies"]=true},type="table"}f.maxStacks={name="colonies.maxStacks",default=4,type="number"}f.importChest={name="colonies.importChest",default="",type="string"}f.transferChest={name="colonies.transferChest",default="",type="string"}e.s=b.makeSettingWrapper(f)local g=nil;local h=nil;local function i()if g==nil then g=peripheral.find("colonyIntegrator")if g==nil then error("Could not find Colony Integrator")end end;return g end;local function j()if h==nil then h=peripheral.find("meBridge")if h==nil then error("Could not find ME Bridge")end end;return h end;local function k()local l=peripheral.getNames()local m={}for n,o in ipairs(l)do if o~="left"then local p=peripheral.wrap(o)if peripheral.hasType(p,"inventory")then m[#m+1]=p end end end;return m end;local function q()local r=e.s.transferChest.get()if r~=""then return peripheral.wrap(r)end;return nil end;local function s()local r=e.s.importChest.get()if r~=""then return peripheral.wrap(r)end;return nil end;local function t(u)a.expect(1,u,"table")local v=nil;local w=u.list()for x=1,u.size(),1 do if w[x]==nil then v=x;break end end;return v end;local function y()if colony==nil or not colony.isValid()then error("Could not find colony info")end;local z=i()local A=colony.getInfo()if not A.active then error("Colony is not active")end;A.graves=z.amountOfGraves()A.constructionCount=z.amountOfConstructionSites()A.players=colony.getPlayers().players;A.requests=colony.getRequests()local B=colony.getBuildings()A.buildings={}A.tavernCount=0;for n,C in ipairs(B)do if C.type=="tavern"and C.level>0 then A.tavernCount=A.tavernCount+1 end;if C.type~="postbox"and C.type~="stash"then A.buildings[#A.buildings+1]=C end end;local D=colony.getVisitors()A.visitorCount=#D;A.visitors={}for n,E in ipairs(D)do A.visitors[E.id]=E end;local F=colony.getCitizens()A.citizenCount=#F;A.citizens={}for n,G in ipairs(F)do A.citizens[G.id]=G end;c.ColonyStatusPollEvent(A):send()return A end;local function H()d.info("Scanning Warehouse...")local I=peripheral.getNames()local w={}for n,o in ipairs(I)do if o:sub(1,18)=="minecolonies:rack_"then d.debug(string.format(".Scanning %s...",o))local J=peripheral.wrap(o)for K,L in pairs(J.list())do local M=L.name;if L.nbt~=nil then M=M..":"..L.nbt end;if w[M]==nil then L=J.getItemDetail(K)if L~=nil then L.inventories={[o]={K}}w[M]=L end else local N=w[M]N.count=N.count+L.count;local O=N.inventories[o]if O==nil then O={K}else O[#O+1]=K end;N.inventories[o]=O;w[M]=N end end end end;return w end;local function P(L,Q)a.expect(1,L,"table")a.expect(2,Q,"number","nil")if Q==nil then Q=L.count end;d.info(string.format(".Empty %s %s",L.name,Q))local u=s()if u==nil then error("Could not find dump chest")return end;local R=0;for o,S in pairs(L.inventories)do local T=peripheral.wrap(o)for n,K in ipairs(S)do local U=nil;while U==nil do U=t(u)if U==nil then d.info("Waiting for dump chest to empty...")sleep(5)end end;local V=T.getItemDetail(K)if V~=nil and V.name==L.name then local W=V.count;if W>Q then W=Q end;R=R+W;d.debug(string.format("%s %s %s %s %s",peripheral.getName(u),o,K,W,U))u.pullItems(o,K,W,U)if R>=Q then break end end end end end;local function X(w)d.debug("Emptying Items...")for n,L in pairs(w)do local Y=b.split(L.name,":")if not e.s.mods.get()[Y[1]]then P(L)else local Z=L.count/L.maxCount;local _=Z-e.s.maxStacks.get()if _>0 then P(L,_*L.maxCount)end end end end;local function a0()local w=H()X(w)end;local function a1()return s()~=nil and q()~=nil end;e.pollColony=y;e.scanItems=H;e.emptyWarehouse=a0;e.canResume=a1;return e
