local a=require("cc.expect")require(settings.get("ghu.base").."core/apis/ghu")local b=require("am.log")local c=require("am.event")local d=require("am.core")local e=require("am.colonies")local f=nil;local function g()if f==nil then f=peripheral.find("meBridge")if f==nil then error("Could not find ME Bridge")end end;return f end;local function h()b.debug("Scanning Warehouse...")local i=peripheral.getNames()local j={}for k,l in ipairs(i)do if l:sub(1,18)=="minecolonies:rack_"then b.debug(string.format(".Scanning %s...",l))local m=peripheral.wrap(l)for n,o in pairs(m.list())do local p=o.name;if o.nbt~=nil then p=p..":"..o.nbt end;if j[p]==nil then o=m.getItemDetail(n)o.inventories={[l]={n}}j[p]=o else local q=j[p]q.count=q.count+o.count;local r=q.inventories[l]if r==nil then r={n}else r[#r+1]=n end;q.inventories[l]=r;j[p]=q end end end end;c.ColoniesScanEvent(j):send()return j end;local function s(o,t)a.expect(1,o,"table")a.expect(2,t,"number","nil")if t==nil then t=o.count end;b.debug(string.format(".Empty %s %s",o.name,t))local u=g()local v=0;b.debug(o)end;local function w(j)b.debug("Emptying Items...")local x={}for p,o in pairs(j)do local y=d.split(o.name,":")if not e.s.mods.get()[y[1]]then s(o)else local z=o.count/o.maxCount;local A=e.s.maxStacks.get()-z;if A>0 then s(o,A*o.maxCount)end end end end;local j=h()w(j)
