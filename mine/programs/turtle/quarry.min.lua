local a=require("cc.expect")require(settings.get("ghu.base").."core/apis/ghu")local b=require("am.core")local c=require("am.log")local d=require("am.pathfind")local e=require("am.quarry")local function f(g,h,i,j,k,l,m,n,o)if g==nil then g=true else g=b.strBool(g)end;if h==nil then h=100 end;if o==nil then o=true else o=b.strBool(o)end;if i~=nil then i=tonumber(i)end;if j~=nil then j=tonumber(j)end;d.resetPosition()c.s.print.set(not o)if k~=nil and l~=nil and m~=nil and n~=nil then e.setOffset(tonumber(k),tonumber(l),tonumber(m),d.dirFromString(n,d.c.DirType.Turn))end;e.setJob(i,j,tonumber(h),g)e.runJob()end;f(arg[1],arg[2],arg[3],arg[4],arg[5],arg[6],arg[7],arg[8],arg[9])
