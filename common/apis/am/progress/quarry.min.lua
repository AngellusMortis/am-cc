local a=require("cc.expect")require(settings.get("ghu.base").."core/apis/ghu")local b=require("am.ui.base").BaseObject;local c=require("am.ui")local d=require("am.event")local e=require("am.log")local f=require("am.progress.helpers")local g=require("am.progress.base")local h=g:extend("am.progress.QuarryWrapper")function h:init(i,j,k)h.super.init(self,i,j,k)self.paused=false;return self end;function h:createUI()local l=self;local m=self.screen.id;local n=2;local o=c.Text(c.a.Top(),"",{id=m..".nameText"})local p,q=self.screen.output.getSize()if q<=12 then n=1;o.visible=false end;if _G.RUN_PROGRESS and c.h.isTerm(self.screen.output)then local r=c.Button(c.a.TopRight(),"x",{id=m..".closeButton",fillColor=colors.red,border=0})r:addActivateHandler(function()_G.RUN_PROGRESS=false end)self.screen:add(r)end;self.screen:add(o)self.screen:add(c.Text(c.a.Center(n),"",{id=m..".titleText"}))local s=c.Frame(c.a.Anchor(1,n+1),{id=m..".progressFrame",fillHorizontal=true,fillVertical=true,border=0,fillColor=colors.black,textColor=colors.white})self.screen:add(s)s:add(c.ProgressBar(c.a.TopLeft(),{id=m..".totalBar",label="Total",displayTotal=self.progress.job.levels,fillColor=colors.lightGray}))s:add(c.ProgressBar(c.a.Left(4),{id=m..".levelBar",label="Level",total=1,fillColor=colors.lightGray}))s:add(c.Text(c.a.Center(7),"",{id=m..".statusText"}))local t=2;local u=2;if p%2==0 then t=3;u=1 end;local v=c.Button(c.a.Center(8,c.c.Offset.Left,t),"\x8f",{id=m..".haltButton",fillColor=colors.red})v:addActivateHandler(function()e.info(string.format("Halting %s...",self.src.label))d.TurtleRequestHaltEvent(self.src.id):send()end)local w=c.Button(c.a.Center(8,c.c.Offset.Right,u),"\x95\x95",{id=m..".pauseButton",fillColor=colors.yellow})w:addActivateHandler(function()if l.paused then e.info(string.format("Continuing %s...",self.src.label))d.TurtleRequestContinueEvent(self.src.id):send()else e.info(string.format("Pausing %s...",self.src.label))d.TurtleRequestPauseEvent(self.src.id):send()end end)s:add(v)s:add(w)s:add(c.Text(c.a.Bottom(),"",{id=m..".posText"}))local x=c.Frame(c.a.Anchor(1,n+1),{id=m..".itemsFrame",fillHorizontal=true,fillVertical=true,border=0,fillColor=colors.black,textColor=colors.white})x:add(c.Text(c.a.TopLeft(),"Mined Items",{id=m..".itemsTitle"}))local y=c.Button(c.a.TopRight(),"x",{id=m..".closeItemsButton",fillColor=colors.red,border=0})y:addActivateHandler(function()s:setVisible(true)x:setVisible(false)l.screen:render()end)x:add(y)local z=c.Frame(c.a.Anchor(1,2),{id=m..".itemsListFrame",fillHorizontal=true,border=0,padLeft=1,padTop=1,fillColor=colors.lightGray,textColor=colors.black,scrollBar=true,height=q-n})z:add(c.Text(c.a.TopLeft(),{},{id=m..".itemListText"}))x:add(z)x:setVisible(false)self.screen:add(x)local A=c.Button(c.a.Center(8),"\x17",{id=m..".itemsButton",fillColor=colors.blue})A:addActivateHandler(function()z.currentScroll=0;s:setVisible(false)x:setVisible(true)l.screen:render()end)s:add(A)h.super.createUI(self)end;function h:update(B)local p,q=self.screen.output.getSize()local m=self.screen.id;self.progress=B;local s=self.screen:get(m..".progressFrame")local z=self.screen:get(m..".itemsListFrame")local o=self.screen:get(m..".nameText")local C=self.screen:get(m..".titleText")local D=s:get(m..".totalBar")local E=s:get(m..".levelBar")local F=s:get(m..".statusText")local G=s:get(m..".posText")local H=z:get(m..".itemListText")if self.src.label~=nil then local I=self.src.label;if d.online then I="info:"..I end;o:update(I)end;local n=1;if q<=12 then o.obj.visible=false else n=2;o.obj.visible=true end;C.obj.anchor.y=n;s.obj.anchor.y=n+1;local J=q-n;local K=f.itemStrings(self.progress.progress.items)z.obj.height=math.max(J,#K+2)H:update(K)local L=""if self.progress.job.left~=nil and self.progress.job.forward~=nil then L=string.format(": %d x %d (%d)",self.progress.job.left,self.progress.job.forward,self.progress.job.levels)end;C:update(string.format("Quarry%s",L))D.obj.displayTotal=self.progress.job.levels;D:update(self.progress.progress.current*100)if self.progress.progress.hitBedrock then D:updateLabel("Total (Bedrock)")end;if self.progress.job.left~=nil then E.obj.total=self.progress.job.left end;E:update(self.progress.progress.completedRows)F:update(self.progress.progress.status)local M="pos (%d, %d) e: %d, d: %d"if p<30 then M="(%d,%d) e:%d, d:%d"end;G:update(string.format(M,self.progress.pos.v.x,self.progress.pos.v.z,self.progress.pos.v.y,self.progress.pos.dir))local x=self.screen:get(m..".itemsFrame")x.obj.anchor.y=n+1 end;function h:updateStatus(N)local m=self.screen.id;local F=self.screen:get(m..".statusText")F:update(N)end;function h:handle(B,O)local m=self.screen.id;if B==d.c.Event.Progress.quarry then self:update(O[1])elseif B==d.c.Event.Turtle.paused then self.paused=true;local w=self.screen:get(m..".pauseButton")w.obj.fillColor=colors.green;w:updateLabel("\x10")self.screen:render()elseif B==d.c.Event.Turtle.started then self.paused=false;local s=self.screen:get(m..".progressFrame")local v=s:get(m..".haltButton")local w=s:get(m..".pauseButton")v.obj.visible=s.obj.visible;v:updateLabel("\x8f")w.obj.visible=s.obj.visible;w.obj.fillColor=colors.yellow;w:updateLabel("\x95\x95")self.screen:render()elseif B==d.c.Event.Turtle.exited then local v=self.screen:get(m..".haltButton")local w=self.screen:get(m..".pauseButton")v.obj.visible=false;w.obj.visible=false;self.screen:render()else self.screen:handle({B,table.unpack(O)})end end
