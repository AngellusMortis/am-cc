local a=require("cc.expect")local b=require("cc.pretty")require(settings.get("ghu.base").."core/apis/ghu")local c=require("am.core")local d={}local e={}e.file={name="log.file",default=nil}e.print={name="log.print",default=true,type="boolean"}d.s=c.makeSettingWrapper(e)local function f(g)return b.render(b.group(b.pretty(g)))end;local function h(g,i,j)a.expect(2,i,"boolean","nil")a.expect(3,j,"boolean","nil")if i==nil then if type(g)=="string"then i=false else i=true end end;if j==nil then j=false end;if i then g=b.pretty(g)end;local k=d.s.file.get()if k~=nil then local l=fs.open(k,"a")if i then l.writeLine(b.render(g))else l.writeLine(g)end;l.close()end;if j or not d.s.print.get()then return end;if i then b.print(f(g))else print(g)end end;local function m(g,i)h(g,i,false)end;local function n(g,i)h(g,i,true)end;d.format=f;d.info=m;d.debug=n;return d
