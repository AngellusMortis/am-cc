local a=require("cc.expect")require(settings.get("ghu.base").."core/apis/ghu")local b=require("am.event")local c=require("am.progress.helpers")local d=require("am.log")local e=require("am.ui")local f=require("am.progress.base")local g=f:extend("am.progress.QuarryWrapper")function g:init(h,i,j,k)g.super.init(self,h,i,j,k)self.completed=false;self.paused=false;self.names[i.name]=true;return self end;function g:createProgressFrame(l)local m=self;local n=l:getTab("progress")local o=self:getBaseId()local p=e.Button(e.a.Center(8),"\x17",{id=o..".itemsButton",fillColor=colors.blue})p:addActivateHandler(function()l:setActive(m.output,"items")local q=n:get(o..".haltButton",m.output)local r=n:get(o..".pauseButton",m.output)if m.completed then q.visible=false;r.visible=false end end)n:add(p)n:add(e.ProgressBar(e.a.TopLeft(),{id=o..".totalBar",label="Total",displayTotal=self.progress.job.levels,fillColor=colors.lightGray}))n:add(e.ProgressBar(e.a.Left(4),{id=o..".levelBar",label="Level",total=1,fillColor=colors.lightGray}))n:add(e.Text(e.a.Center(7),"",{id=o..".statusText"}))local q=e.Button(e.a.Center(8,e.c.Offset.Left,2),"\x8f",{id=o..".haltButton",fillColor=colors.red})q:addActivateHandler(function()d.info(string.format("Halting %s...",self.src.label))b.TurtleRequestHaltEvent(self.src.id):send()end)n:add(q)local r=e.Button(e.a.Center(8,e.c.Offset.Right,2),"\x95\x95",{id=o..".pauseButton",fillColor=colors.yellow})r:addActivateHandler(function()if m.paused then d.info(string.format("Continuing %s...",self.src.label))b.TurtleRequestContinueEvent(self.src.id):send()else d.info(string.format("Pausing %s...",self.src.label))b.TurtleRequestPauseEvent(self.src.id):send()end end)n:add(r)n:add(e.Text(e.a.Bottom(),"",{id=o..".posText"}))n:setVisible(true)end;function g:createItemsFrame(l,s)local m=self;local o=self:getBaseId()local t=l:createTab("items")t.fillHorizontal=true;t.fillVertical=true;t.border=0;t.fillColor=colors.black;t.textColor=colors.white;t:add(e.Text(e.a.TopLeft(),"Mined Items",{id=o..".itemsTitle"}))local u=e.Button(e.a.TopRight(),"x",{id=o..".closeItemsButton",fillColor=colors.red,border=0})u:addActivateHandler(function()l:setActive(m.output,"progress")end)t:add(u)local v=e.Frame(e.a.Anchor(1,2),{id=o..".itemsListFrame",fillHorizontal=true,border=0,padLeft=1,padTop=1,fillColor=colors.lightGray,textColor=colors.black,scrollBar=true,height=s})v:add(e.Text(e.a.TopLeft(),{},{id=o..".itemListText"}))t:add(v)t:setVisible(false)end;function g:createUI()local o=self:getBaseId()local w=2;local x=e.Text(e.a.Top(),"",{id=o..".nameText"})local y,s=self.output.getSize()if s<=12 then w=1;x.visible=false end;if _G.PROGRESS_SHOW_CLOSE then local z=e.Button(e.a.TopRight(),"x",{id=o..".closeButton",fillColor=colors.red,border=0})z:addActivateHandler(function()_G.RUN_PROGRESS=false end)self.frame:add(z)end;self.frame:add(x)self.frame:add(e.Text(e.a.Center(w),"",{id=o..".titleText"}))local l=e.TabbedFrame(e.a.Anchor(1,w+1),{id=o..".mainFrame",fillHorizontal=true,fillVertical=true,border=0,fillColor=colors.black,textColor=colors.white,primaryTabId="progress"})self:createProgressFrame(l)self:createItemsFrame(l,s-w)l:setActive(self.output,"progress")self.frame:add(l)g.super.createUI(self)end;function g:update(A)local B,s=self.output.getSize()local o=self:getBaseId()self.progress=A;local x=self.frame:get(o..".nameText",self.output)local C=self.frame:get(o..".titleText",self.output)if self.src.label~=nil then local D=self.src.label;if b.online then D="info:"..D end;x:update(D)end;local w=1;if s<=12 then x.obj.visible=false else w=2;x.obj.visible=self.frame.visible end;local E=""C.obj.anchor.y=w;if self.progress.job.left~=nil and self.progress.job.forward~=nil then E=string.format(": %d x %d (%d)",self.progress.job.left,self.progress.job.forward,self.progress.job.levels)end;C:update(string.format("Quarry%s",E))local l=self.frame:get(o..".mainFrame",self.output)l.obj.anchor.y=w+1;local n=l:getTab("progress")local F=n:get(o..".totalBar")local G=n:get(o..".levelBar")local H=n:get(o..".statusText")local I=n:get(o..".posText")F.obj.displayTotal=self.progress.job.levels;F:update(self.progress.progress.current*100)if self.progress.progress.hitBedrock then F:updateLabel("Total (Bedrock)")else F:updateLabel("Total")end;if self.progress.job.left~=nil then G.obj.total=self.progress.job.left end;G:update(self.progress.progress.completedRows)H:update(self.progress.progress.status)local J="pos (%d, %d) e: %d, d: %d"if B<30 then J="(%d,%d) e:%d, d:%d"end;I:update(string.format(J,self.progress.pos.v.x,self.progress.pos.v.z,self.progress.pos.v.y,self.progress.pos.dir))local t=l:getTab("items")local v=t:get(o..".itemsListFrame")local K=t:get(o..".itemListText")local L=s-w;local M=c.itemStrings(self.progress.progress.items)v.obj.height=math.max(L,#M+2)K:update(M)end;function g:updateStatus(N)local o=self:getBaseId()local H=self.frame:get(o..".statusText",self.output)H:update(N)end;function g:handle(A,O)local o=self:getBaseId()if A==b.c.Event.Progress.quarry then self:update(O[1])else local l=self.frame:get(o..".mainFrame",self.output)local P=l.obj.active==1;local n=l:getTab("progress")local q=n:get(o..".haltButton")local r=n:get(o..".pauseButton")if A==b.c.Event.Turtle.paused then self.paused=true;self.completed=false;r.obj.fillColor=colors.green;r:updateLabel("\x10")if P then l:render()end elseif A==b.c.Event.Turtle.started then self.paused=false;self.completed=false;q.obj.visible=P and true or false;q:updateLabel("\x8f")r.obj.visible=P and true or false;r.obj.fillColor=colors.yellow;r:updateLabel("\x95\x95")if P then l:render()end elseif A==b.c.Event.Turtle.exited then self.completed=true;self.paused=false;q.obj.visible=false;r.obj.visible=false;if P then l:render()end else self.frame:handle(self.output,{A,table.unpack(O)})end end end;return g
