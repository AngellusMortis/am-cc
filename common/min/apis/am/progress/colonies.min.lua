require(settings.get("ghu.base").."core/apis/ghu")local a=require("am.ui.base").BaseObject;local b=require("am.ui")local c=require("am.progress.helpers")local d=require("am.core")local e=require("am.event")local f=require("am.progress.base")local g=a:extend("am.progress.ColonyProgress")function g:init(h)g.super.init(self)self.id=h;self.status=nil;self.warehouse=nil;self.text=""return self end;local i=f:extend("am.progress.QuarryWrapper")function i:init(j,h,k,l)i.super.init(self,j,g(h),k,l)self.names={[e.c.Event.Colonies.status_poll]=true,[e.c.Event.Colonies.warehouse_poll]=true}self:resetNeedsUpdate()return self end;function i:createMainTab(m)local n=self;local o=self:getBaseId()local p=m:getTab("main").obj;local q=3;local r=1;p:add(b.Text(b.a.Left(r),"Raid"))p:add(b.Text(b.a.Right(r,q),"",{id=o..".raid"}))r=r+1;p:add(b.Text(b.a.Left(r),"Happiness"))p:add(b.Text(b.a.Right(r,q),"",{id=o..".happiness"}))r=r+1;p:add(b.Text(b.a.Left(r),"Citizens"))p:add(b.Text(b.a.Right(r,q),"/",{id=o..".citizens"}))local s=b.Button(b.a.Right(r),"\x17",{id=o..".citizenTabButton",fillColor=colors.blue,textColor=colors.white,border=0})s:addActivateHandler(function()local t=false;if m.obj.tabIdMap["citizens"]==nil then n:createCitizensTab(m)t=true end;n:updateCitizensTab(m)m:setActive("citizens")if t then n:render()end end)p:add(s)r=r+1;p:add(b.Text(b.a.Left(r),"Graves"))p:add(b.Text(b.a.Right(r,q),"",{id=o..".graves"}))r=r+1;p:add(b.Text(b.a.Left(r),"Contructions"))p:add(b.Text(b.a.Right(r,q),"",{id=o..".contructions"}))r=r+1;p:add(b.Text(b.a.Left(r),"Requests"))local u=b.Button(b.a.Right(r),"\x17",{id=o..".requestsTabButton",fillColor=colors.blue,textColor=colors.white,border=0})u:addActivateHandler(function()local t=false;if m.obj.tabIdMap["requests"]==nil then n:createRequestsTab(m)t=true end;n:updateRequestsTab(m)m:setActive("requests")if t then n:render()end end)p:add(u)p:add(b.Text(b.a.Right(r,q),"",{id=o..".requests"}))r=r+1;p:add(b.Text(b.a.Left(r),"Buildings"))p:add(b.Text(b.a.Right(r,q),"",{id=o..".buildings"}))local v=b.Button(b.a.Right(r),"\x17",{id=o..".buildingsTabButton",fillColor=colors.red,textColor=colors.white,border=0})v:addActivateHandler(function()local t=false;if m.obj.tabIdMap["buildings"]==nil then n:createBuildingsTab(m)t=true end;n:updateBuildingsTab(m)m:setActive("buildings")if t then n:render()end end)p:add(v)r=r+1;p:add(b.Text(b.a.Left(r),"Visitors"))p:add(b.Text(b.a.Right(r,q),"",{id=o..".visitors"}))local w=b.Button(b.a.Right(r),"\x17",{id=o..".visitorsTabButton",fillColor=colors.green,textColor=colors.white,border=0})w:addActivateHandler(function()local t=false;if m.obj.tabIdMap["visitors"]==nil then n:createVisitorsTab(m)t=true end;n:updateVisitorsTab(m)m:setActive("visitors")if t then n:render()end end)p:add(w)r=r+1;p:add(b.Text(b.a.Left(r),"Players"))local x=b.Button(b.a.Right(r),"\x17",{id=o..".playersTabButton",fillColor=colors.blue,textColor=colors.white,border=0})x:addActivateHandler(function()local t=false;if m.obj.tabIdMap["players"]==nil then n:createPlayersTab(m)t=true end;n:updatePlayersTab(m)m:setActive("players")if t then n:render()end end)p:add(x)p:add(b.Text(b.a.Right(r,q),"",{id=o..".players"}))r=r+1;p:add(b.Text(b.a.Left(r),"Warehouse"))local y=b.Button(b.a.Right(r),"\x17",{id=o..".warehouseTabButton",fillColor=colors.red,textColor=colors.white,border=0})y:addActivateHandler(function()local t=false;if m.obj.tabIdMap["warehouse"]==nil then n:createWarehouseTab(m)t=true end;n:updateWarehouseTab(m)m:setActive("warehouse")if t then n:render()end end)p:add(y)p:add(b.Text(b.a.Right(r,q),"",{id=o..".warehouse"}))r=r+1;p:add(b.Text(b.a.Bottom(),"",{id=o..".statusText"}))end;function i:createCitizensTab(m)local z,A=self.output.getSize()local o=self:getBaseId()local p=m:createTab("citizens")p.fillColor=colors.black;local n=self;p:add(b.Text(b.a.TopLeft(),"Citizens"))local B=b.Button(b.a.TopRight(),"x",{id=o..".citizenCloseButton",fillColor=colors.red,border=0})B:addActivateHandler(function()n:updateMainTab(m)m:setActive("main")end)p:add(B)local C=b.Frame(b.a.Anchor(1,2),{id=o..".citizenListFrame",fillColor=colors.lightGray,textColor=colors.black,fillHorizontal=true,scrollBar=true,height=A-1,border=0,padTop=1,padLeft=1})C:add(b.Text(b.a.TopLeft(),"",{id=o..".citizenList"}))p:add(C)end;function i:createRequestsTab(m)local z,A=self.output.getSize()local o=self:getBaseId()local p=m:createTab("requests")local n=self;p:add(b.Text(b.a.TopLeft(),"Requests"))local B=b.Button(b.a.TopRight(),"x",{id=o..".requestCloseButton",fillColor=colors.red,border=0})B:addActivateHandler(function()n:updateMainTab(m)m:setActive("main")end)p:add(B)local D=b.Frame(b.a.Anchor(1,2),{id=o..".requestListFrame",fillColor=colors.lightGray,textColor=colors.black,fillHorizontal=true,scrollBar=true,height=A-1,border=0,padTop=1,padLeft=1})D:add(b.Text(b.a.TopLeft(),"",{id=o..".requestList"}))p:add(D)end;function i:createBuildingsTab(m)local z,A=self.output.getSize()local o=self:getBaseId()local p=m:createTab("buildings")local n=self;p:add(b.Text(b.a.TopLeft(),"Buildings"))local B=b.Button(b.a.TopRight(),"x",{id=o..".buildingCloseButton",fillColor=colors.red,border=0})B:addActivateHandler(function()n:updateMainTab(m)m:setActive("main")end)p:add(B)local E=b.Frame(b.a.Anchor(1,2),{id=o..".buildingListFrame",fillColor=colors.lightGray,textColor=colors.black,fillHorizontal=true,scrollBar=true,height=A-1,border=0,padTop=1,padLeft=1})E:add(b.Text(b.a.TopLeft(),"",{id=o..".buildingList"}))p:add(E)end;function i:createVisitorsTab(m)local z,A=self.output.getSize()local o=self:getBaseId()local p=m:createTab("visitors")local n=self;p:add(b.Text(b.a.TopLeft(),"Visitors"))local B=b.Button(b.a.TopRight(),"x",{id=o..".visitorCloseButton",fillColor=colors.red,border=0})B:addActivateHandler(function()n:updateMainTab(m)m:setActive("main")end)p:add(B)local F=b.Frame(b.a.Anchor(1,2),{id=o..".visitorListFrame",fillColor=colors.lightGray,textColor=colors.black,fillHorizontal=true,scrollBar=true,height=A-1,border=0,padTop=1,padLeft=1})F:add(b.Text(b.a.TopLeft(),"",{id=o..".visitorList"}))p:add(F)end;function i:createPlayersTab(m)local z,A=self.output.getSize()local o=self:getBaseId()local p=m:createTab("players")local n=self;p:add(b.Text(b.a.TopLeft(),"Players"))local B=b.Button(b.a.TopRight(),"x",{id=o..".playerCloseButton",fillColor=colors.red,border=0})B:addActivateHandler(function()n:updateMainTab(m)m:setActive("main")end)p:add(B)local G=b.Frame(b.a.Anchor(1,2),{id=o..".playerListFrame",fillColor=colors.lightGray,textColor=colors.black,fillHorizontal=true,scrollBar=true,height=A-1,border=0,padTop=1,padLeft=1})G:add(b.Text(b.a.TopLeft(),"",{id=o..".playerList"}))p:add(G)end;function i:createWarehouseTab(m)local z,A=self.output.getSize()local o=self:getBaseId()local p=m:createTab("warehouse")local n=self;p:add(b.Text(b.a.TopLeft(),"Warehouse"))local B=b.Button(b.a.TopRight(),"x",{id=o..".warehouseCloseButton",fillColor=colors.red,border=0})B:addActivateHandler(function()n:updateMainTab(m)m:setActive("main")end)p:add(B)local H=b.Frame(b.a.Anchor(1,2),{id=o..".warehouseListFrame",fillColor=colors.lightGray,textColor=colors.black,fillHorizontal=true,scrollBar=true,height=A-1,border=0,padTop=1,padLeft=1})H:add(b.Text(b.a.TopLeft(),"",{id=o..".warehouseList"}))p:add(H)end;function i:createUI()local o=self:getBaseId()self.frame:add(b.Text(b.a.Top(),"",{id=o..".titleText"}))if _G.PROGRESS_SHOW_CLOSE then local B=b.Button(b.a.TopRight(),"x",{id=o..".closeButton",fillColor=colors.red,border=0})B:addActivateHandler(function()_G.RUN_PROGRESS=false end)self.frame:add(B)end;local m=b.TabbedFrame(b.a.Anchor(1,3),{id=o..".tabsBase",fillColor=colors.black,textColor=colors.white,border=0,fillVertical=true,fillHorizontal=true})local I=m:bind(self.output)self:createMainTab(I)self.frame:add(m)i.super.createUI(self)end;function i:updateMainTab(m)if not self.needsUpdate.main then return end;local J=self.progress.status;local o=self:getBaseId()local p=m:getTab("main")local K=p:get(o..".statusText")K:update(self.progress.text)local L=p:get(o..".raid")if J.raid then L.obj.textColor=colors.red;L:update("Yes")else L.obj.textColor=colors.green;L:update("No")end;local M=p:get(o..".happiness")if J.happiness<5 then M.obj.textColor=colors.red elseif J.happiness<8 then M.obj.textColor=colors.yellow else M.obj.textColor=colors.green end;M:update(string.format("%d/10",self.progress.status.happiness))local N=p:get(o..".citizens")local O=J.tavernCount*4;local P=J.maxCitizens-O;if J.citizenCount==P then N.obj.textColor=colors.green elseif J.citizenCount>J.maxCitizens then N.obj.textColor=colors.red else N.obj.textColor=colors.yellow end;N:update(string.format("%d/%d",J.citizenCount,J.maxCitizens))local Q=p:get(o..".graves")if J.graves>0 then Q.obj.textColor=colors.red else Q.obj.textColor=colors.green end;Q:update(tostring(J.graves))local R=p:get(o..".contructions")R:update(tostring(J.constructionCount))local S=p:get(o..".requests")if#J.requests>0 then S.obj.textColor=colors.yellow else S.obj.textColor=colors.green end;S:update(tostring(#J.requests))local T=p:get(o..".buildings")T:update(tostring(#J.buildings))local U=p:get(o..".visitors")U:update(tostring(J.visitorCount))local V=p:get(o..".players")V:update(tostring(#J.players))local W=p:get(o..".warehouse")local X="??%"if self.progress.warehouse~=nil then local Y=self.progress.warehouse.usedSlots/self.progress.warehouse.totalSlots*100;if Y>=75 then W.obj.textColor=colors.red elseif Y>=50 then W.obj.textColor=colors.yellow elseif Y>=25 then W.obj.textColor=colors.white else W.obj.textColor=colors.green end;X=string.format("%d%% [%s/%s]",Y,self.progress.warehouse.usedSlots,self.progress.warehouse.totalSlots)end;W:update(X)self.needsUpdate.main=false end;function i:updateCitizensTab(m)if not self.needsUpdate.citizens then return end;local z,A=self.output.getSize()local J=self.progress.status;local o=self:getBaseId()local p=m:getTab("citizens")local C=p:get(o..".citizenListFrame")local Z=math.max(A-1,J.citizenCount)if C.obj.height~=Z then C.obj.height=Z;C:render()end;local _=p:get(o..".citizenList")local a0={}for z,a1 in pairs(J.citizens)do local a2="Unemployed"if a1.job~=nil then a2=a1.job end;a0[#a0+1]=string.format("%s %s",a2,a1.name)end;table.sort(a0)_:update(a0)self.needsUpdate.citizens=false end;function i:updateRequestsTab(m)if not self.needsUpdate.requests then return end;local z,A=self.output.getSize()local J=self.progress.status;local o=self:getBaseId()local p=m:getTab("requests")local D=p:get(o..".requestListFrame")local Z=math.max(A-1,#J.requests)if D.obj.height~=Z then D.obj.height=Z;D:render()end;local a3=p:get(o..".requestList")local a4={}for z,a5 in pairs(J.requests)do a4[#a4+1]=a5.name end;table.sort(a4)a3:update(a4)self.needsUpdate.requests=false end;function i:updateBuildingsTab(m)if not self.needsUpdate.buildings then return end;local z,A=self.output.getSize()local J=self.progress.status;local o=self:getBaseId()local p=m:getTab("buildings")local E=p:get(o..".buildingListFrame")local Z=math.max(A-1,#J.buildings)if E.obj.height~=Z then E.obj.height=Z;E:render()end;local a6=p:get(o..".buildingList")local a7={}for z,a8 in pairs(J.buildings)do local a9=string.gsub(a8.type,"^%l",string.upper)a7[#a7+1]=string.format("L%d %s",a8.level,a9)end;table.sort(a7)a6:update(a7)self.needsUpdate.buildings=false end;function i:updateVisitorsTab(m)if not self.needsUpdate.visitors then return end;local z,A=self.output.getSize()local J=self.progress.status;local o=self:getBaseId()local p=m:getTab("visitors")local F=p:get(o..".visitorListFrame")local Z=math.max(A-1,J.visitorCount)if F.obj.height~=Z then F.obj.height=Z;F:render()end;local aa=p:get(o..".visitorList")local ab={}for z,ac in pairs(J.visitors)do ab[#ab+1]=ac.name end;table.sort(ab)aa:update(ab)self.needsUpdate.visitors=false end;function i:updatePlayersTab(m)if not self.needsUpdate.players then return end;local z,A=self.output.getSize()local J=self.progress.status;local o=self:getBaseId()local p=m:getTab("players")local G=p:get(o..".playerListFrame")local Z=math.max(A-1,#J.players)if G.obj.height~=Z then G.obj.height=Z;G:render()end;local ad=p:get(o..".playerList")local ae={}for z,af in pairs(J.players)do ae[#ae+1]=string.format("%s %s",af.rank,af.name)end;table.sort(ae)ad:update(ae)self.needsUpdate.players=false end;function i:updateWarehouseTab(m)if not self.needsUpdate.warehouse then return end;local z,A=self.output.getSize()local W=self.progress.warehouse;local ag=0;if W~=nil then ag=#W.items end;local o=self:getBaseId()local p=m:getTab("warehouse")local H=p:get(o..".warehouseListFrame")local Z=math.max(A-1,ag)if H.obj.height~=Z then H.obj.height=Z;H:render()end;local ah=p:get(o..".warehouseList")local X={}if W~=nil then X=c.itemStrings(d.copy(W.items),false,true)end;ah:update(X)self.needsUpdate.players=false end;function i:resetNeedsUpdate()self.needsUpdate={main=true,citizens=true,requests=true,buildings=true,visitors=true,players=true,warehouse=true}end;function i:update(j,ai,aj)local o=self:getBaseId()if ai~=nil then if ai.name==e.c.Event.Colonies.status_poll then self.progress.status=ai.status;self.progress.text=ai.text;self:resetNeedsUpdate()elseif ai.name==e.c.Event.Colonies.warehouse_poll then if ai.id~=self.progress.id then return end;self.progress.warehouse=ai;self:resetNeedsUpdate()end end;if self.progress.status==nil then return end;if not self.frame.visible and not aj then return end;local ak=self.frame:get(o..".titleText",self.output)ak:update(self.progress.status.name)local m=self.frame:get(o..".tabsBase",self.output)local al=m.obj.tabIndexIdMap[m.obj.active]if al=="main"then self:updateMainTab(m)elseif al=="citizens"then self:updateCitizensTab(m)elseif al=="requests"then self:updateRequestsTab(m)elseif al=="buildings"then self:updateBuildingsTab(m)elseif al=="visitors"then self:updateVisitorsTab(m)elseif al=="players"then self:updatePlayersTab(m)end end;function i:updateStatus(j,J)self.progress.text=J;local o=self:getBaseId()local K=self.frame:get(o..".statusText",self.output)K:update(self.progress.text)end;function i:handle(j,ai,am)if ai==e.c.Event.Colonies.status_poll then self:update(j,am[1])else self.frame:handle(self.output,{ai,table.unpack(am)})end end;return i
