require(settings.get("ghu.base").."core/apis/ghu")local a=require("am.ui.base").BaseObject;local b=require("am.ui")local c=require("am.progress.helpers")local d=require("am.core")local e=require("am.event")local f=require("am.progress.base")local g=a:extend("am.progress.ColonyProgress")function g:init(h)g.super.init(self)self.id=h;self.status=nil;self.warehouse=nil;self.text=""return self end;local i=f:extend("am.progress.QuarryWrapper")function i:init(j,h,k,l)i.super.init(self,j,g(h),k,l)self.names={[e.c.Event.Colonies.status_poll]=true,[e.c.Event.Colonies.warehouse_poll]=true}self:resetNeedsUpdate()return self end;function i:createMainTab(m)local n=self;local o=self:getBaseId()local p=m:getTab("main").obj;local q=3;local r=1;p:add(b.Text(b.a.Left(r),"Raid"))p:add(b.Text(b.a.Right(r,q),"",{id=o..".raid"}))r=r+1;p:add(b.Text(b.a.Left(r),"Happiness"))p:add(b.Text(b.a.Right(r,q),"",{id=o..".happiness"}))r=r+1;p:add(b.Text(b.a.Left(r),"Citizens"))p:add(b.Text(b.a.Right(r,q),"/",{id=o..".citizens"}))local s=b.Button(b.a.Right(r),"\x17",{id=o..".citizenTabButton",fillColor=colors.blue,textColor=colors.white,border=0})s:addActivateHandler(function()local t=false;if m.obj.tabIdMap["citizens"]==nil then n:createCitizensTab(m)t=true end;n:updateCitizensTab(m)m:setActive("citizens")if t then n:render()end end)p:add(s)r=r+1;p:add(b.Text(b.a.Left(r),"Graves"))p:add(b.Text(b.a.Right(r,q),"",{id=o..".graves"}))r=r+1;p:add(b.Text(b.a.Left(r),"Contructions"))p:add(b.Text(b.a.Right(r,q),"",{id=o..".contructions"}))r=r+1;p:add(b.Text(b.a.Left(r),"Requests"))local u=b.Button(b.a.Right(r),"\x17",{id=o..".requestsTabButton",fillColor=colors.blue,textColor=colors.white,border=0})u:addActivateHandler(function()local t=false;if m.obj.tabIdMap["requests"]==nil then n:createRequestsTab(m)t=true end;n:updateRequestsTab(m)m:setActive("requests")if t then n:render()end end)p:add(u)p:add(b.Text(b.a.Right(r,q),"",{id=o..".requests"}))r=r+1;p:add(b.Text(b.a.Left(r),"Buildings"))p:add(b.Text(b.a.Right(r,q),"",{id=o..".buildings"}))local v=b.Button(b.a.Right(r),"\x17",{id=o..".buildingsTabButton",fillColor=colors.red,textColor=colors.white,border=0})v:addActivateHandler(function()local t=false;if m.obj.tabIdMap["buildings"]==nil then n:createBuildingsTab(m)t=true end;n:updateBuildingsTab(m)m:setActive("buildings")if t then n:render()end end)p:add(v)r=r+1;p:add(b.Text(b.a.Left(r),"Visitors"))p:add(b.Text(b.a.Right(r,q),"",{id=o..".visitors"}))local w=b.Button(b.a.Right(r),"\x17",{id=o..".visitorsTabButton",fillColor=colors.green,textColor=colors.white,border=0})w:addActivateHandler(function()local t=false;if m.obj.tabIdMap["visitors"]==nil then n:createVisitorsTab(m)t=true end;n:updateVisitorsTab(m)m:setActive("visitors")if t then n:render()end end)p:add(w)r=r+1;p:add(b.Text(b.a.Left(r),"Players"))local x=b.Button(b.a.Right(r),"\x17",{id=o..".playersTabButton",fillColor=colors.blue,textColor=colors.white,border=0})x:addActivateHandler(function()local t=false;if m.obj.tabIdMap["players"]==nil then n:createPlayersTab(m)t=true end;n:updatePlayersTab(m)m:setActive("players")if t then n:render()end end)p:add(x)p:add(b.Text(b.a.Right(r,q),"",{id=o..".players"}))r=r+1;p:add(b.Text(b.a.Left(r),"Warehouse"))local y=b.Button(b.a.Right(r),"\x17",{id=o..".warehouseTabButton",fillColor=colors.red,textColor=colors.white,border=0})y:addActivateHandler(function()local t=false;if m.obj.tabIdMap["warehouse"]==nil then n:createWarehouseTab(m)t=true end;n:updateWarehouseTab(m)m:setActive("warehouse")if t then n:render()end end)p:add(y)p:add(b.Text(b.a.Right(r,q),"",{id=o..".warehouse"}))r=r+1;p:add(b.Text(b.a.Bottom(),"",{id=o..".statusText"}))end;function i:createCitizensTab(m)local z,A=self.output.getSize()local o=self:getBaseId()local p=m:createTab("citizens")p.fillColor=colors.black;local n=self;p:add(b.Text(b.a.TopLeft(),"Citizens"))local B=b.Button(b.a.TopRight(),"x",{id=o..".citizenCloseButton",fillColor=colors.red,border=0})B:addActivateHandler(function()n:updateMainTab(m)m:setActive("main")end)p:add(B)local C=b.Frame(b.a.Anchor(1,2),{id=o..".citizenListFrame",fillColor=colors.lightGray,textColor=colors.black,fillHorizontal=true,scrollBar=true,height=A-1,border=0,padTop=1,padLeft=1})C:add(b.Text(b.a.TopLeft(),"",{id=o..".citizenList"}))p:add(C)end;function i:createRequestsTab(m)local z,A=self.output.getSize()local o=self:getBaseId()local p=m:createTab("requests")local n=self;p:add(b.Text(b.a.TopLeft(),"Requests"))local B=b.Button(b.a.TopRight(),"x",{id=o..".requestCloseButton",fillColor=colors.red,border=0})B:addActivateHandler(function()n:updateMainTab(m)m:setActive("main")end)p:add(B)local D=b.Frame(b.a.Anchor(1,2),{id=o..".requestListFrame",fillColor=colors.lightGray,textColor=colors.black,fillHorizontal=true,scrollBar=true,height=A-1,border=0,padTop=1,padLeft=1})D:add(b.Text(b.a.TopLeft(),"",{id=o..".requestList"}))p:add(D)end;function i:createBuildingsTab(m)local z,A=self.output.getSize()local o=self:getBaseId()local p=m:createTab("buildings")local n=self;p:add(b.Text(b.a.TopLeft(),"Buildings"))local B=b.Button(b.a.TopRight(),"x",{id=o..".buildingCloseButton",fillColor=colors.red,border=0})B:addActivateHandler(function()n:updateMainTab(m)m:setActive("main")end)p:add(B)local E=b.Frame(b.a.Anchor(1,2),{id=o..".buildingListFrame",fillColor=colors.lightGray,textColor=colors.black,fillHorizontal=true,scrollBar=true,height=A-1,border=0,padTop=1,padLeft=1})E:add(b.Text(b.a.TopLeft(),"",{id=o..".buildingList"}))p:add(E)end;function i:createVisitorsTab(m)local z,A=self.output.getSize()local o=self:getBaseId()local p=m:createTab("visitors")local n=self;p:add(b.Text(b.a.TopLeft(),"Visitors"))local B=b.Button(b.a.TopRight(),"x",{id=o..".visitorCloseButton",fillColor=colors.red,border=0})B:addActivateHandler(function()n:updateMainTab(m)m:setActive("main")end)p:add(B)local F=b.Frame(b.a.Anchor(1,2),{id=o..".visitorListFrame",fillColor=colors.lightGray,textColor=colors.black,fillHorizontal=true,scrollBar=true,height=A-1,border=0,padTop=1,padLeft=1})F:add(b.Text(b.a.TopLeft(),"",{id=o..".visitorList"}))p:add(F)end;function i:createPlayersTab(m)local z,A=self.output.getSize()local o=self:getBaseId()local p=m:createTab("players")local n=self;p:add(b.Text(b.a.TopLeft(),"Players"))local B=b.Button(b.a.TopRight(),"x",{id=o..".playerCloseButton",fillColor=colors.red,border=0})B:addActivateHandler(function()n:updateMainTab(m)m:setActive("main")end)p:add(B)local G=b.Frame(b.a.Anchor(1,2),{id=o..".playerListFrame",fillColor=colors.lightGray,textColor=colors.black,fillHorizontal=true,scrollBar=true,height=A-1,border=0,padTop=1,padLeft=1})G:add(b.Text(b.a.TopLeft(),"",{id=o..".playerList"}))p:add(G)end;function i:createWarehouseTab(m)local z,A=self.output.getSize()local o=self:getBaseId()local p=m:createTab("warehouse")local n=self;p:add(b.Text(b.a.TopLeft(),"Warehouse"))local B=b.Button(b.a.TopRight(),"x",{id=o..".warehouseCloseButton",fillColor=colors.red,border=0})B:addActivateHandler(function()n:updateMainTab(m)m:setActive("main")end)p:add(B)local H=b.Frame(b.a.Anchor(1,2),{id=o..".warehouseListFrame",fillColor=colors.lightGray,textColor=colors.black,fillHorizontal=true,scrollBar=true,height=A-1,border=0,padTop=1,padLeft=1})H:add(b.Text(b.a.TopLeft(),"",{id=o..".warehouseList"}))p:add(H)end;function i:createUI()local o=self:getBaseId()self.frame:add(b.Text(b.a.Top(),"",{id=o..".titleText"}))if _G.PROGRESS_SHOW_CLOSE then local B=b.Button(b.a.TopRight(),"x",{id=o..".closeButton",fillColor=colors.red,border=0})B:addActivateHandler(function()_G.RUN_PROGRESS=false end)self.frame:add(B)end;local m=b.TabbedFrame(b.a.Anchor(1,3),{id=o..".tabsBase",fillColor=colors.black,textColor=colors.white,border=0,fillVertical=true,fillHorizontal=true})local I=m:bind(self.output)self:createMainTab(I)self.frame:add(m)i.super.createUI(self)end;function i:updateMainTab(m)if not self.needsUpdate.main then return end;local J=self.progress.status;local o=self:getBaseId()local K,z=self.output.getSize()local p=m:getTab("main")local L=p:get(o..".statusText")L:update(self.progress.text)local M=p:get(o..".raid")if J.raid then M.obj.textColor=colors.red;M:update("Yes")else M.obj.textColor=colors.green;M:update("No")end;local N=p:get(o..".happiness")if J.happiness<5 then N.obj.textColor=colors.red elseif J.happiness<8 then N.obj.textColor=colors.yellow else N.obj.textColor=colors.green end;N:update(string.format("%d/10",self.progress.status.happiness))local O=p:get(o..".citizens")local P=J.tavernCount*4;local Q=J.maxCitizens-P;if J.citizenCount==Q then O.obj.textColor=colors.green elseif J.citizenCount>J.maxCitizens then O.obj.textColor=colors.red else O.obj.textColor=colors.yellow end;O:update(string.format("%d/%d",J.citizenCount,J.maxCitizens))local R=p:get(o..".graves")if J.graves>0 then R.obj.textColor=colors.red else R.obj.textColor=colors.green end;R:update(tostring(J.graves))local S=p:get(o..".contructions")S:update(tostring(J.constructionCount))local T=p:get(o..".requests")if#J.requests>0 then T.obj.textColor=colors.yellow else T.obj.textColor=colors.green end;T:update(tostring(#J.requests))local U=p:get(o..".buildings")U:update(tostring(#J.buildings))local V=p:get(o..".visitors")V:update(tostring(J.visitorCount))local W=p:get(o..".players")W:update(tostring(#J.players))local X=p:get(o..".warehouse")local Y="??%"if self.progress.warehouse~=nil then local Z=self.progress.warehouse.usedSlots/self.progress.warehouse.totalSlots*100;if Z>=75 then X.obj.textColor=colors.red elseif Z>=50 then X.obj.textColor=colors.yellow elseif Z>=25 then X.obj.textColor=colors.white else X.obj.textColor=colors.green end;if K<30 then Y=string.format("%d%%",Z)else Y=string.format("%d%% [%s/%s]",Z,self.progress.warehouse.usedSlots,self.progress.warehouse.totalSlots)end end;X:update(Y)self.needsUpdate.main=false end;function i:updateCitizensTab(m)if not self.needsUpdate.citizens then return end;local z,A=self.output.getSize()local J=self.progress.status;local o=self:getBaseId()local p=m:getTab("citizens")local C=p:get(o..".citizenListFrame")local _=math.max(A-1,J.citizenCount)if C.obj.height~=_ then C.obj.height=_;C:render()end;local a0=p:get(o..".citizenList")local a1={}for z,a2 in pairs(J.citizens)do local a3="Unemployed"if a2.job~=nil then a3=a2.job end;a1[#a1+1]=string.format("%s %s",a3,a2.name)end;table.sort(a1)a0:update(a1)self.needsUpdate.citizens=false end;function i:updateRequestsTab(m)if not self.needsUpdate.requests then return end;local z,A=self.output.getSize()local J=self.progress.status;local o=self:getBaseId()local p=m:getTab("requests")local D=p:get(o..".requestListFrame")local _=math.max(A-1,#J.requests)if D.obj.height~=_ then D.obj.height=_;D:render()end;local a4=p:get(o..".requestList")local a5={}for z,a6 in pairs(J.requests)do a5[#a5+1]=a6.name end;table.sort(a5)a4:update(a5)self.needsUpdate.requests=false end;function i:updateBuildingsTab(m)if not self.needsUpdate.buildings then return end;local z,A=self.output.getSize()local J=self.progress.status;local o=self:getBaseId()local p=m:getTab("buildings")local E=p:get(o..".buildingListFrame")local _=math.max(A-1,#J.buildings)if E.obj.height~=_ then E.obj.height=_;E:render()end;local a7=p:get(o..".buildingList")local a8={}for z,a9 in pairs(J.buildings)do local aa=string.gsub(a9.type,"^%l",string.upper)a8[#a8+1]=string.format("L%d %s",a9.level,aa)end;table.sort(a8)a7:update(a8)self.needsUpdate.buildings=false end;function i:updateVisitorsTab(m)if not self.needsUpdate.visitors then return end;local z,A=self.output.getSize()local J=self.progress.status;local o=self:getBaseId()local p=m:getTab("visitors")local F=p:get(o..".visitorListFrame")local _=math.max(A-1,J.visitorCount)if F.obj.height~=_ then F.obj.height=_;F:render()end;local ab=p:get(o..".visitorList")local ac={}for z,ad in pairs(J.visitors)do ac[#ac+1]=ad.name end;table.sort(ac)ab:update(ac)self.needsUpdate.visitors=false end;function i:updatePlayersTab(m)if not self.needsUpdate.players then return end;local z,A=self.output.getSize()local J=self.progress.status;local o=self:getBaseId()local p=m:getTab("players")local G=p:get(o..".playerListFrame")local _=math.max(A-1,#J.players)if G.obj.height~=_ then G.obj.height=_;G:render()end;local ae=p:get(o..".playerList")local af={}for z,ag in pairs(J.players)do af[#af+1]=string.format("%s %s",ag.rank,ag.name)end;table.sort(af)ae:update(af)self.needsUpdate.players=false end;function i:updateWarehouseTab(m)if not self.needsUpdate.warehouse then return end;local z,A=self.output.getSize()local X=self.progress.warehouse;local ah=0;if X~=nil then ah=#X.items end;local o=self:getBaseId()local p=m:getTab("warehouse")local H=p:get(o..".warehouseListFrame")local _=math.max(A-1,ah)if H.obj.height~=_ then H.obj.height=_;H:render()end;local ai=p:get(o..".warehouseList")local Y={}if X~=nil then Y=c.itemStrings(d.copy(X.items),false,true)end;ai:update(Y)self.needsUpdate.players=false end;function i:resetNeedsUpdate()self.needsUpdate={main=true,citizens=true,requests=true,buildings=true,visitors=true,players=true,warehouse=true}end;function i:update(j,aj,ak)local o=self:getBaseId()if aj~=nil then if aj.name==e.c.Event.Colonies.status_poll then self.progress.status=aj.status;self.progress.text=aj.text;self:resetNeedsUpdate()elseif aj.name==e.c.Event.Colonies.warehouse_poll then if aj.id~=self.progress.id then return end;self.progress.warehouse=aj;self:resetNeedsUpdate()end end;if self.progress.status==nil then return end;if not self.frame.visible and not ak then return end;local al=self.frame:get(o..".titleText",self.output)al:update(self.progress.status.name)local m=self.frame:get(o..".tabsBase",self.output)local am=m.obj.tabIndexIdMap[m.obj.active]if am=="main"then self:updateMainTab(m)elseif am=="citizens"then self:updateCitizensTab(m)elseif am=="requests"then self:updateRequestsTab(m)elseif am=="buildings"then self:updateBuildingsTab(m)elseif am=="visitors"then self:updateVisitorsTab(m)elseif am=="players"then self:updatePlayersTab(m)end end;function i:updateStatus(j,J)self.progress.text=J;local o=self:getBaseId()local L=self.frame:get(o..".statusText",self.output)L:update(self.progress.text)end;function i:handle(j,aj,an)if aj==e.c.Event.Colonies.status_poll then self:update(j,an[1])else self.frame:handle(self.output,{aj,table.unpack(an)})end end;return i
