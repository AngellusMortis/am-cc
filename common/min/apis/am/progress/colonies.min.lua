local a=require("cc.expect")require(settings.get("ghu.base").."core/apis/ghu")local b=require("am.ui.base").BaseObject;local c=require("am.ui")local d=require("am.event")local e=require("am.progress.base")local f=b:extend("am.progress.ColonyProgress")function f:init(g)f.super.init(self)self.id=g;self.status=nil;self.text=""return self end;local h=e:extend("am.progress.QuarryWrapper")function h:init(i,g,j,k)h.super.init(self,i,f(g),j,k)self.names={[d.c.Event.Colonies.status_poll]=true}self.needsUpdate={main=true,citizens=true,requests=true,buildings=true,visitors=true,players=true}return self end;function h:createMainTab(l)local m=self;local n=self:getBaseId()local o=l:getTab("main").obj;local p=3;local q=1;o:add(c.Text(c.a.Left(q),"Raid"))o:add(c.Text(c.a.Right(q,p),"",{id=n..".raid"}))q=q+1;o:add(c.Text(c.a.Left(q),"Happiness"))o:add(c.Text(c.a.Right(q,p),"",{id=n..".happiness"}))q=q+1;o:add(c.Text(c.a.Left(q),"Citizens"))o:add(c.Text(c.a.Right(q,p),"/",{id=n..".citizens"}))local r=c.Button(c.a.Right(q),"\x17",{id=n..".citizenTabButton",fillColor=colors.blue,textColor=colors.white,border=0})r:addActivateHandler(function()local s=false;if l.obj.tabIdMap["citizens"]==nil then m:createCitizensTab(l)s=true end;m:updateCitizensTab(l)l:setActive("citizens")if s then m:render()end end)o:add(r)q=q+1;o:add(c.Text(c.a.Left(q),"Graves"))o:add(c.Text(c.a.Right(q,p),"",{id=n..".graves"}))q=q+1;o:add(c.Text(c.a.Left(q),"Contructions"))o:add(c.Text(c.a.Right(q,p),"",{id=n..".contructions"}))q=q+1;o:add(c.Text(c.a.Left(q),"Requests"))local t=c.Button(c.a.Right(q),"\x17",{id=n..".requestsTabButton",fillColor=colors.blue,textColor=colors.white,border=0})t:addActivateHandler(function()local s=false;if l.obj.tabIdMap["requests"]==nil then m:createRequestsTab(l)s=true end;m:updateRequestsTab(l)l:setActive("requests")if s then m:render()end end)o:add(t)o:add(c.Text(c.a.Right(q,p),"",{id=n..".requests"}))q=q+1;o:add(c.Text(c.a.Left(q),"Buildings"))o:add(c.Text(c.a.Right(q,p),"",{id=n..".buildings"}))local u=c.Button(c.a.Right(q),"\x17",{id=n..".buildingsTabButton",fillColor=colors.red,textColor=colors.white,border=0})u:addActivateHandler(function()local s=false;if l.obj.tabIdMap["buildings"]==nil then m:createBuildingsTab(l)s=true end;m:updateBuildingsTab(l)l:setActive("buildings")if s then m:render()end end)o:add(u)q=q+1;o:add(c.Text(c.a.Left(q),"Visitors"))o:add(c.Text(c.a.Right(q,p),"",{id=n..".visitors"}))local v=c.Button(c.a.Right(q),"\x17",{id=n..".visitorsTabButton",fillColor=colors.green,textColor=colors.white,border=0})v:addActivateHandler(function()local s=false;if l.obj.tabIdMap["visitors"]==nil then m:createVisitorsTab(l)s=true end;m:updateVisitorsTab(l)l:setActive("visitors")if s then m:render()end end)o:add(v)q=q+1;o:add(c.Text(c.a.Left(q),"Players"))local w=c.Button(c.a.Right(q),"\x17",{id=n..".playersTabButton",fillColor=colors.blue,textColor=colors.white,border=0})w:addActivateHandler(function()local s=false;if l.obj.tabIdMap["players"]==nil then m:createPlayersTab(l)s=true end;m:updatePlayersTab(l)l:setActive("players")if s then m:render()end end)o:add(w)o:add(c.Text(c.a.Right(q,p),"",{id=n..".players"}))o:add(c.Text(c.a.Bottom(),"",{id=n..".statusText"}))end;function h:createCitizensTab(l)local x,y=self.output.getSize()local n=self:getBaseId()local o=l:createTab("citizens")o.fillColor=colors.black;local m=self;o:add(c.Text(c.a.TopLeft(),"Citizens"))local z=c.Button(c.a.TopRight(),"x",{id=n..".citizenCloseButton",fillColor=colors.red,border=0})z:addActivateHandler(function()m:updateMainTab(l)l:setActive("main")end)o:add(z)local A=c.Frame(c.a.Anchor(1,2),{id=n..".citizenListFrame",fillColor=colors.lightGray,textColor=colors.black,fillHorizontal=true,scrollBar=true,height=y-1,border=0,padTop=1,padLeft=1})A:add(c.Text(c.a.TopLeft(),"",{id=n..".citizenList"}))o:add(A)end;function h:createRequestsTab(l)local x,y=self.output.getSize()local n=self:getBaseId()local o=l:createTab("requests")local m=self;o:add(c.Text(c.a.TopLeft(),"Requests"))local z=c.Button(c.a.TopRight(),"x",{id=n..".requestCloseButton",fillColor=colors.red,border=0})z:addActivateHandler(function()m:updateMainTab(l)l:setActive("main")end)o:add(z)local B=c.Frame(c.a.Anchor(1,2),{id=n..".requestListFrame",fillColor=colors.lightGray,textColor=colors.black,fillHorizontal=true,scrollBar=true,height=y-1,border=0,padTop=1,padLeft=1})B:add(c.Text(c.a.TopLeft(),"",{id=n..".requestList"}))o:add(B)end;function h:createBuildingsTab(l)local x,y=self.output.getSize()local n=self:getBaseId()local o=l:createTab("buildings")local m=self;o:add(c.Text(c.a.TopLeft(),"Buildings"))local z=c.Button(c.a.TopRight(),"x",{id=n..".buildingCloseButton",fillColor=colors.red,border=0})z:addActivateHandler(function()m:updateMainTab(l)l:setActive("main")end)o:add(z)local C=c.Frame(c.a.Anchor(1,2),{id=n..".buildingListFrame",fillColor=colors.lightGray,textColor=colors.black,fillHorizontal=true,scrollBar=true,height=y-1,border=0,padTop=1,padLeft=1})C:add(c.Text(c.a.TopLeft(),"",{id=n..".buildingList"}))o:add(C)end;function h:createVisitorsTab(l)local x,y=self.output.getSize()local n=self:getBaseId()local o=l:createTab("visitors")local m=self;o:add(c.Text(c.a.TopLeft(),"Visitors"))local z=c.Button(c.a.TopRight(),"x",{id=n..".visitorCloseButton",fillColor=colors.red,border=0})z:addActivateHandler(function()m:updateMainTab(l)l:setActive("main")end)o:add(z)local D=c.Frame(c.a.Anchor(1,2),{id=n..".visitorListFrame",fillColor=colors.lightGray,textColor=colors.black,fillHorizontal=true,scrollBar=true,height=y-1,border=0,padTop=1,padLeft=1})D:add(c.Text(c.a.TopLeft(),"",{id=n..".visitorList"}))o:add(D)end;function h:createPlayersTab(l)local x,y=self.output.getSize()local n=self:getBaseId()local o=l:createTab("players")local m=self;o:add(c.Text(c.a.TopLeft(),"Players"))local z=c.Button(c.a.TopRight(),"x",{id=n..".playerCloseButton",fillColor=colors.red,border=0})z:addActivateHandler(function()m:updateMainTab(l)l:setActive("main")end)o:add(z)local E=c.Frame(c.a.Anchor(1,2),{id=n..".playerListFrame",fillColor=colors.lightGray,textColor=colors.black,fillHorizontal=true,scrollBar=true,height=y-1,border=0,padTop=1,padLeft=1})E:add(c.Text(c.a.TopLeft(),"",{id=n..".playerList"}))o:add(E)end;function h:createUI()local n=self:getBaseId()self.frame:add(c.Text(c.a.Top(),"",{id=n..".titleText"}))if _G.PROGRESS_SHOW_CLOSE then local z=c.Button(c.a.TopRight(),"x",{id=n..".closeButton",fillColor=colors.red,border=0})z:addActivateHandler(function()_G.RUN_PROGRESS=false end)self.frame:add(z)end;local l=c.TabbedFrame(c.a.Anchor(1,3),{id=n..".tabsBase",fillColor=colors.black,textColor=colors.white,border=0,fillVertical=true,fillHorizontal=true})local F=l:bind(self.output)self:createMainTab(F)self.frame:add(l)h.super.createUI(self)end;function h:updateMainTab(l)if not self.needsUpdate.main then return end;local G=self.progress.status;local n=self:getBaseId()local o=l:getTab("main")local H=o:get(n..".statusText")H:update(self.progress.text)local I=o:get(n..".raid")if G.raid then I.obj.textColor=colors.red;I:update("Yes")else I.obj.textColor=colors.green;I:update("No")end;local J=o:get(n..".happiness")if G.happiness<5 then J.obj.textColor=colors.red elseif G.happiness<8 then J.obj.textColor=colors.yellow else J.obj.textColor=colors.green end;J:update(string.format("%d/10",self.progress.status.happiness))local K=o:get(n..".citizens")local L=G.tavernCount*4;local M=G.maxCitizens-L;if G.citizenCount==M then K.obj.textColor=colors.green elseif G.citizenCount>G.maxCitizens then K.obj.textColor=colors.red else K.obj.textColor=colors.yellow end;K:update(string.format("%d/%d",G.citizenCount,G.maxCitizens))local N=o:get(n..".graves")if G.graves>0 then N.obj.textColor=colors.red else N.obj.textColor=colors.green end;N:update(tostring(G.graves))local O=o:get(n..".contructions")O:update(tostring(G.constructionCount))local P=o:get(n..".requests")if#G.requests>0 then P.obj.textColor=colors.yellow else P.obj.textColor=colors.green end;P:update(tostring(#G.requests))local Q=o:get(n..".buildings")Q:update(tostring(#G.buildings))local R=o:get(n..".visitors")R:update(tostring(G.visitorCount))local S=o:get(n..".players")S:update(tostring(#G.players))self.needsUpdate.main=false end;function h:updateCitizensTab(l)if not self.needsUpdate.citizens then return end;local x,y=self.output.getSize()local G=self.progress.status;local n=self:getBaseId()local o=l:getTab("citizens")local A=o:get(n..".citizenListFrame")local T=math.max(y-1,G.citizenCount)if A.obj.height~=T then A.obj.height=T;A:render()end;local U=o:get(n..".citizenList")local V={}for x,W in pairs(G.citizens)do local X="Unemployed"if W.job~=nil then X=W.job end;V[#V+1]=string.format("%s %s",X,W.name)end;table.sort(V)U:update(V)self.needsUpdate.citizens=false end;function h:updateRequestsTab(l)if not self.needsUpdate.requests then return end;local x,y=self.output.getSize()local G=self.progress.status;local n=self:getBaseId()local o=l:getTab("requests")local B=o:get(n..".requestListFrame")local T=math.max(y-1,#G.requests)if B.obj.height~=T then B.obj.height=T;B:render()end;local Y=o:get(n..".requestList")local Z={}for x,_ in pairs(G.requests)do Z[#Z+1]=_.desc end;table.sort(Z)Y:update(Z)self.needsUpdate.requests=false end;function h:updateBuildingsTab(l)if not self.needsUpdate.buildings then return end;local x,y=self.output.getSize()local G=self.progress.status;local n=self:getBaseId()local o=l:getTab("buildings")local C=o:get(n..".buildingListFrame")local T=math.max(y-1,#G.buildings)if C.obj.height~=T then C.obj.height=T;C:render()end;local a0=o:get(n..".buildingList")local a1={}for x,a2 in pairs(G.buildings)do local a3=string.gsub(a2.type,"^%l",string.upper)a1[#a1+1]=string.format("L%d %s",a2.level,a3)end;table.sort(a1)a0:update(a1)self.needsUpdate.buildings=false end;function h:updateVisitorsTab(l)if not self.needsUpdate.visitors then return end;local x,y=self.output.getSize()local G=self.progress.status;local n=self:getBaseId()local o=l:getTab("visitors")local D=o:get(n..".visitorListFrame")local T=math.max(y-1,G.visitorCount)if D.obj.height~=T then D.obj.height=T;D:render()end;local a4=o:get(n..".visitorList")local a5={}for x,a6 in pairs(G.visitors)do a5[#a5+1]=a6.name end;table.sort(a5)a4:update(a5)self.needsUpdate.visitors=false end;function h:updatePlayersTab(l)if not self.needsUpdate.players then return end;local x,y=self.output.getSize()local G=self.progress.status;local n=self:getBaseId()local o=l:getTab("players")local E=o:get(n..".playerListFrame")local T=math.max(y-1,#G.players)if E.obj.height~=T then E.obj.height=T;E:render()end;local a7=o:get(n..".playerList")local a8={}for x,a9 in pairs(G.players)do a8[#a8+1]=string.format("%s %s",a9.rank,a9.name)end;table.sort(a8)a7:update(a8)self.needsUpdate.players=false end;function h:update(i,aa,ab)local n=self:getBaseId()if aa~=nil and aa.name==d.c.Event.Colonies.status_poll then self.progress.status=aa.status;self.progress.text=aa.text;self.needsUpdate={main=true,citizens=true,requests=true,buildings=true,visitors=true,players=true}end;if not self.frame.visible and not ab then return end;local ac=self.frame:get(n..".titleText",self.output)ac:update(self.progress.status.name)local l=self.frame:get(n..".tabsBase",self.output)local ad=l.obj.tabIndexIdMap[l.obj.active]if ad=="main"then self:updateMainTab(l)elseif ad=="citizens"then self:updateCitizensTab(l)elseif ad=="requests"then self:updateRequestsTab(l)elseif ad=="buildings"then self:updateBuildingsTab(l)elseif ad=="visitors"then self:updateVisitorsTab(l)elseif ad=="players"then self:updatePlayersTab(l)end end;function h:updateStatus(i,G)self.progress.text=G;local n=self:getBaseId()local H=self.frame:get(n..".statusText",self.output)H:update(self.progress.text)end;function h:handle(i,aa,ae)if aa==d.c.Event.Colonies.status_poll then self:update(i,ae[1])else self.frame:handle(self.output,{aa,table.unpack(ae)})end end;return h
